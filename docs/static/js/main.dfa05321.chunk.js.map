{"version":3,"sources":["Components/AddCategory.js","Components/GifGridItem.js","Helpers/getGifs.js","Components/GifGrid.js","Hooks/UseFetchGifs.js","GifExpert.js","index.js"],"names":["AddCategory","setCategories","useState","InputValue","setInputValue","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","GifGridItem","id","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","UseFetchGifs","key","GifExpert","ReactDOM","render","document","getElementById"],"mappings":"oMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAU,OAAKP,GAAL,mBAAmBO,OAC5CN,EAAc,MAKlB,SACI,uBAAOO,KAAK,OACZC,MAAQT,EACRU,SAjBkB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,OCNlBG,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,GAAGC,EAAe,EAAfA,MAAMC,EAAS,EAATA,IAGlC,OADAC,QAAQC,IAAI,CAACJ,KAAIC,QAAOC,QAEpB,sBAAKG,UAAU,yCAAf,UACI,4BAAIJ,IACJ,qBAAKK,IAAKJ,EAAKK,IAAMN,Q,uBCRpBO,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbR,EADa,iDACoCS,UAAUF,GAD9C,+DAEAG,MAAMV,GAFN,cAEbW,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EACxB,MAAO,CACHlB,GAAIkB,EAAIlB,GACRC,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIC,cAAN,aAAE,EAAYC,iBAAiBlB,QARvB,kBAWZc,GAXY,4CAAH,sDCIPK,EAAU,SAAC,GAAgB,IAAfZ,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZvB,mBAAS,CAC/B6B,KAAM,GACNO,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KAetC,OATAC,qBAAW,WACPjB,EAAQC,GAAUiB,MAAM,SAAAP,GACpBK,EAAS,CACLT,KAAMI,EACNG,SAAS,SAGlB,CAACb,IAEGc,EDbwBI,CAAalB,GAAhCU,EADuB,EAC5BJ,KAAaO,EADe,EACfA,QAEpB,OACI,qCACI,6BAAKb,IACHa,GAAW,cACb,qBAAKjB,UAAU,YAAf,SAEQc,EAAOF,KAAI,SAAAC,GAAG,OACV,wBAAC,EAAD,2BAAiBA,GAAjB,IAAuBU,IAAKV,EAAIlB,eEV3C6B,EAAY,WAAM,MAGS3C,mBAAS,CAAC,kBAHnB,mBAGpBQ,EAHoB,KAGRT,EAHQ,KAS3B,OACI,qCACI,4CACA,uBACA,cAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAEQS,EAAWuB,KAAK,SAAAR,GAAQ,OACnB,cAAC,EAAD,CAASA,SAAYA,GAAeA,Y,MChB7DqB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.dfa05321.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [InputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        //console.log(\"Submit!\")\r\n        if(InputValue.trim().length > 2){\r\n            setCategories( categories => [InputValue,...categories,] )\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input type=\"text\"\r\n            value={ InputValue }\r\n            onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n    console.log({id, title, url});\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{title}</p>\r\n            <img src={url} alt= {title} />\r\n\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=tJDqRw2Mc7sW0XBfu0rq7j6BDfVOZal7`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n    const gifs = data.map(img =>{\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { UseFetchGifs } from '../Hooks/UseFetchGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n    const {data:images, loading} = UseFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3>{category}</h3>\r\n            { loading && 'Cargando...' }\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img =>(\r\n                        <GifGridItem {...img}  key={img.id}/>\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../Helpers/getGifs'\r\n\r\nexport const UseFetchGifs = (category) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () =>{\r\n        getGifs(category).then( images => {\r\n            setstate({\r\n                data: images,\r\n                loading: false\r\n            });\r\n        })\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory'\r\nimport { GifGrid } from './Components/GifGrid'\r\n\r\nexport const GifExpert = () => {\r\n\r\n    //const categories = ['One Punch Man', 'Samurai x', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch Man']);\r\n\r\n    //const handleAdd = () => {\r\n    //    setcategories( [...categories, 'Evangelion'] )\r\n    //}\r\n\r\n    return (\r\n        <>\r\n            <h2>Gif Expert</h2>\r\n            <hr />\r\n            <AddCategory setCategories = { setCategories } />\r\n            <ol>\r\n                {\r\n                    categories.map( category =>\r\n                        (<GifGrid category = {category} key={category}/>)\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpert } from './GifExpert';\nimport './index.css';\n\nReactDOM.render(\n  <GifExpert />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}